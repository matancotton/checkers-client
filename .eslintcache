[{"C:\\Users\\matan\\Checkers\\client\\src\\components\\checkersGame\\GameBoard.js":"1","C:\\Users\\matan\\Checkers\\client\\src\\components\\checkersGame\\GamePiece.js":"2","C:\\Users\\matan\\Checkers\\client\\src\\gameLogic\\boardLogic.js":"3","C:\\Users\\matan\\Checkers\\client\\src\\components\\routers\\AppRouter.js":"4","C:\\Users\\matan\\Checkers\\client\\src\\components\\context\\PlayersContext.js":"5","C:\\Users\\matan\\Checkers\\client\\src\\components\\context\\LoginContext.js":"6","C:\\Users\\matan\\Checkers\\client\\src\\components\\login\\Login.js":"7","C:\\Users\\matan\\Checkers\\client\\src\\components\\main\\Header.js":"8","C:\\Users\\matan\\Checkers\\client\\src\\components\\login\\Subscribe.js":"9","C:\\Users\\matan\\Checkers\\client\\src\\actions\\playersAction.js":"10","C:\\Users\\matan\\Checkers\\client\\src\\reducers\\playersReducer.js":"11","C:\\Users\\matan\\Checkers\\client\\src\\actions\\gameBoardAction.js":"12","C:\\Users\\matan\\Checkers\\client\\src\\components\\rooms\\UserField.js":"13","C:\\Users\\matan\\Checkers\\client\\src\\gameLogic\\kingLogic.js":"14","C:\\Users\\matan\\Checkers\\client\\src\\components\\routers\\PrivateRouter.js":"15","C:\\Users\\matan\\Checkers\\client\\src\\sockets\\socket.js":"16","C:\\Users\\matan\\Checkers\\client\\src\\gameLogic\\pieceLogic.js":"17","C:\\Users\\matan\\Checkers\\client\\src\\components\\rooms\\GameRoom.js":"18","C:\\Users\\matan\\Checkers\\client\\src\\reducers\\messagesReducer.js":"19","C:\\Users\\matan\\Checkers\\client\\src\\components\\messages\\Inbox.js":"20","C:\\Users\\matan\\Checkers\\client\\src\\reducers\\gameBoardReducer.js":"21","C:\\Users\\matan\\Checkers\\client\\src\\components\\messages\\RescivedMessage.js":"22","C:\\Users\\matan\\Checkers\\client\\src\\components\\messages\\Invitation.js":"23","C:\\Users\\matan\\Checkers\\client\\src\\reportWebVitals.js":"24","C:\\Users\\matan\\Checkers\\client\\src\\components\\routers\\LoginRoute.js":"25","C:\\Users\\matan\\Checkers\\client\\src\\reducers\\loginReducer.js":"26","C:\\Users\\matan\\Checkers\\client\\src\\server\\auth.js":"27","C:\\Users\\matan\\Checkers\\client\\src\\components\\profile\\Profile.js":"28","C:\\Users\\matan\\Checkers\\client\\src\\components\\home\\HomePage.js":"29","C:\\Users\\matan\\Checkers\\client\\src\\actions\\messagesAction.js":"30","C:\\Users\\matan\\Checkers\\client\\src\\index.js":"31","C:\\Users\\matan\\Checkers\\client\\src\\components\\context\\MessagesContext.js":"32","C:\\Users\\matan\\Checkers\\client\\src\\components\\login\\LoginForm.js":"33","C:\\Users\\matan\\Checkers\\client\\src\\components\\rooms\\Players.js":"34","C:\\Users\\matan\\Checkers\\client\\src\\cookies\\cookies.js":"35","C:\\Users\\matan\\Checkers\\client\\src\\actions\\loginAction.js":"36","C:\\Users\\matan\\Checkers\\client\\src\\components\\rooms\\GameInfoBox.js":"37","C:\\Users\\matan\\Checkers\\client\\src\\components\\context\\GameBoardContext.js":"38"},{"size":6634,"mtime":1608486703868,"results":"39","hashOfConfig":"40"},{"size":3087,"mtime":1608486922795,"results":"41","hashOfConfig":"40"},{"size":4247,"mtime":1608483863225,"results":"42","hashOfConfig":"40"},{"size":1568,"mtime":1606861323022,"results":"43","hashOfConfig":"40"},{"size":806,"mtime":1607028772233,"results":"44","hashOfConfig":"40"},{"size":642,"mtime":1606680613870,"results":"45","hashOfConfig":"40"},{"size":364,"mtime":1606565886283,"results":"46","hashOfConfig":"40"},{"size":1642,"mtime":1607880304453,"results":"47","hashOfConfig":"40"},{"size":6651,"mtime":1607442496310,"results":"48","hashOfConfig":"40"},{"size":222,"mtime":1606778826812,"results":"49","hashOfConfig":"40"},{"size":287,"mtime":1606838895735,"results":"50","hashOfConfig":"40"},{"size":82,"mtime":1607298668927,"results":"51","hashOfConfig":"40"},{"size":613,"mtime":1606853770022,"results":"52","hashOfConfig":"40"},{"size":3612,"mtime":1607883194581,"results":"53","hashOfConfig":"40"},{"size":597,"mtime":1606680469098,"results":"54","hashOfConfig":"40"},{"size":2169,"mtime":1608484313932,"results":"55","hashOfConfig":"40"},{"size":3272,"mtime":1608482470568,"results":"56","hashOfConfig":"40"},{"size":2885,"mtime":1608486673994,"results":"57","hashOfConfig":"40"},{"size":439,"mtime":1607077314924,"results":"58","hashOfConfig":"40"},{"size":1123,"mtime":1607210927078,"results":"59","hashOfConfig":"40"},{"size":374,"mtime":1608052721205,"results":"60","hashOfConfig":"40"},{"size":1484,"mtime":1607450302646,"results":"61","hashOfConfig":"40"},{"size":1200,"mtime":1607213450827,"results":"62","hashOfConfig":"40"},{"size":362,"mtime":1606460933713,"results":"63","hashOfConfig":"40"},{"size":580,"mtime":1606680458954,"results":"64","hashOfConfig":"40"},{"size":373,"mtime":1606839681594,"results":"65","hashOfConfig":"40"},{"size":1131,"mtime":1608489070750,"results":"66","hashOfConfig":"40"},{"size":579,"mtime":1606680383391,"results":"67","hashOfConfig":"40"},{"size":606,"mtime":1608489150320,"results":"68","hashOfConfig":"40"},{"size":183,"mtime":1606861025305,"results":"69","hashOfConfig":"40"},{"size":546,"mtime":1606473656116,"results":"70","hashOfConfig":"40"},{"size":765,"mtime":1607042381519,"results":"71","hashOfConfig":"40"},{"size":2887,"mtime":1606953117530,"results":"72","hashOfConfig":"40"},{"size":608,"mtime":1606853781662,"results":"73","hashOfConfig":"40"},{"size":552,"mtime":1607295034977,"results":"74","hashOfConfig":"40"},{"size":164,"mtime":1606493475512,"results":"75","hashOfConfig":"40"},{"size":3027,"mtime":1608485526844,"results":"76","hashOfConfig":"40"},{"size":770,"mtime":1607902292176,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},"14zgnyf",{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"90"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\matan\\Checkers\\client\\src\\components\\checkersGame\\GameBoard.js",["163","164"],"import { nanoid } from 'nanoid';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport cloneDeep from 'lodash.clonedeep';\r\nimport { setBoardAction } from '../../actions/gameBoardAction';\r\nimport { isPlayerWon, movePiece, setMustEatPiecesList } from '../../gameLogic/boardLogic';\r\nimport { isAbleToEat,pieceEatMoves } from '../../gameLogic/pieceLogic';\r\nimport { isKingAbleToEat,kingEatingMoves } from '../../gameLogic/kingLogic';\r\nimport { addMessage, gameSockets, sendMessageSocket } from '../../sockets/socket';\r\nimport { GameBoardContext } from '../context/GameBoardContext';\r\nimport GamePiece from './GamePiece';\r\n\r\n\r\nconst GameBoard = (props)=>{\r\n    \r\n    const {gameBoardState,gameBoardDispatch} = useContext(GameBoardContext)\r\n    const [squares, setSquares] = useState([])\r\n    const [selectedPiece, setSelectedPiece] = useState(null)\r\n    const [pieceValidMoves,setPieceValidMoves] = useState([])\r\n    \r\n\r\n    const isSquareBlack = (index) => {\r\n        const isEvenColumn = index % 2 === 0;\r\n        const isEvenRow = Math.floor(index / 8) % 2 === 0;\r\n    \r\n        if (isEvenRow) {\r\n            return isEvenColumn ? false : true;\r\n        } else {\r\n            return isEvenColumn ? true : false;\r\n        }\r\n    };\r\n\r\n    const updateValidMoves = (validMoves,eatingMoves)=>{\r\n        const initSquares = [...squares]\r\n        if (eatingMoves.length > 0) {\r\n            validMoves = eatingMoves\r\n            for (let i=0; i<initSquares.length; i++) {\r\n                initSquares[i].color=isSquareBlack(i)?'black':'white'\r\n                validMoves.forEach((location)=>{\r\n                    if (location.row === parseInt(i/8) && location.column === i%8) {\r\n                        initSquares[i].color='red'\r\n                    } \r\n                })\r\n            }\r\n        } else {\r\n            for (let i=0; i<initSquares.length; i++) {\r\n                initSquares[i].color=isSquareBlack(i)?'black':'white'\r\n                validMoves.forEach((location)=>{\r\n                    if (location.row === parseInt(i/8) && location.column === i%8) {\r\n                        initSquares[i].color='green'\r\n                    } \r\n                })\r\n            }\r\n        }\r\n        \r\n        setSquares(initSquares)\r\n        setPieceValidMoves(validMoves)\r\n    }\r\n\r\n    const setBoard = (pieces)=>{\r\n        const initSquares = []\r\n        let squaresIndex = 0;\r\n        for (let i=0; i < 8; i++) {\r\n            for (let j=0; j< 8; j++) {\r\n                if (pieces[i][j] != null) {\r\n                    initSquares.push({color: isSquareBlack(squaresIndex)?'black':'white', piece: {...pieces[i][j]}, id: nanoid()})\r\n                }\r\n\r\n                else if (!!pieceValidMoves.find(place=>place.row===i&&place.column===j)) {\r\n                    initSquares.push({color: 'red', piece: null, id: nanoid()})\r\n                }\r\n\r\n                else {\r\n                    initSquares.push({color: isSquareBlack(squaresIndex)?'black':'white', piece: null, id: nanoid()})\r\n                }\r\n                squaresIndex++\r\n            }\r\n            \r\n        }\r\n        setSquares(initSquares)\r\n    }\r\n\r\n    const squareClicked = (row,column)=>{\r\n        if (selectedPiece==null) {\r\n            return\r\n        }\r\n        if (!!pieceValidMoves.find((location)=>(location.row===row && location.column===column))){\r\n                submitTurn(row,column)\r\n                if (!selectedPiece) {\r\n                    setPieceValidMoves([]) \r\n                }\r\n        }\r\n\r\n    }\r\n\r\n    const submitTurn = (row,column)=>{\r\n        const oldBoard = cloneDeep(gameBoardState)\r\n        const newBoard = movePiece(oldBoard,selectedPiece.row,selectedPiece.column,row,column)\r\n        let eatingMoves = []\r\n        let isEating = false\r\n        if (selectedPiece.isKing) {\r\n            eatingMoves = kingEatingMoves(newBoard, row, column)\r\n            isEating = isKingAbleToEat(gameBoardState,selectedPiece.row,selectedPiece.column,row,column)\r\n        } else {\r\n            eatingMoves = pieceEatMoves(newBoard,row,column)\r\n            isEating = isAbleToEat(gameBoardState,selectedPiece.row,selectedPiece.column,row,column)\r\n        }\r\n        \r\n        if (eatingMoves.length > 0 && isEating) {\r\n            setSelectedPiece({row,column, isEating: true})\r\n            console.log(selectedPiece)\r\n            setPieceValidMoves(eatingMoves)\r\n        } else {\r\n            newBoard.isWhite = !newBoard.isWhite\r\n            setSelectedPiece(null)\r\n            setPieceValidMoves([])\r\n        }\r\n        \r\n        gameBoardDispatch(setBoardAction(newBoard))\r\n        // setBoard(gameBoardState.pieces)\r\n        sendMessageSocket(props.opponent.socketId, {\r\n            type: 'GAME_MOVE',\r\n            content: {...newBoard}\r\n        })\r\n        \r\n    }\r\n\r\n    useEffect(()=>{\r\n        if (isPlayerWon(gameBoardState,props.isMyColorWhite)) {\r\n            sendMessageSocket(props.opponent.socketId, {\r\n                type: 'GAME_OVER'\r\n            })\r\n            props.setIsWinner(true)\r\n        }\r\n        setBoard(gameBoardState.pieces)\r\n        props.setMustEatPieces(setMustEatPiecesList(gameBoardState,props.isMyColorWhite))\r\n        gameSockets(gameBoardDispatch,props.setIsWinner)\r\n\r\n    },[gameBoardState])\r\n\r\n\r\n    return (\r\n        <div className=\"board-container\">\r\n            {squares.map((square, i) => (\r\n\t\t\t\t<div\r\n                    className={`square-${square.color}`} key={square.id} \r\n                    onClick={(()=>{\r\n                        squareClicked(parseInt(i/8),i%8)\r\n                    })}>\r\n                    {square.piece != null && <GamePiece \r\n                                            isKing={square.piece.isKing}\r\n                                            color={square.piece.color} \r\n                                            isMyPiece={square.piece.isWhite === props.isMyColorWhite}\r\n                                            isMyTurn = {gameBoardState.isWhite===props.isMyColorWhite}\r\n                                            row={square.piece.row} column={square.piece.column}\r\n                                            isSelectedPiece = {selectedPiece != null && selectedPiece.row ===square.piece.row && selectedPiece.column === square.piece.column}\r\n                                            setSelectedPiece={setSelectedPiece}\r\n                                            selectedPiece = {selectedPiece}\r\n                                            updateValidMoves={updateValidMoves}\r\n                                            mustEatPieces={props.mustEatPieces}/>}\r\n\t\t\t\t</div>\r\n\t\t\t))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameBoard;",["165","166"],"C:\\Users\\matan\\Checkers\\client\\src\\components\\checkersGame\\GamePiece.js",["167","168","169"],"C:\\Users\\matan\\Checkers\\client\\src\\gameLogic\\boardLogic.js",["170","171","172","173","174","175","176","177","178","179","180","181","182","183"],"import { isAbleToEat, pieceEatMoves, pieceValidMoves } from \"./pieceLogic\"\r\n\r\nexport const setBoard = (pieces)=>{\r\n    for (let row=0; row<8;row++){\r\n        pieces[row]=[]\r\n        for (let column=0; column<8;column++){\r\n            if (row>=0&&row<=2){\r\n                if (row%2===0&&column%2===1 || row%2===1&&column%2===0)\r\n                    pieces[row][column]= {row,column,isWhite: false, color: 'black-piece'}\r\n                else\r\n                    pieces[row][column] = undefined\r\n            }\r\n            else if (row>=5&&row<=7){\r\n                if (row%2===0&&column%2===1 || row%2===1&&column%2===0)\r\n                    pieces[row][column]={row, column, isWhite: true, color: 'white-piece'}\r\n                else\r\n                    pieces[row][column] = undefined\r\n            }\r\n            else\r\n                if (row%2===0&&column%2===1 || row%2===1&&column%2===0)\r\n                    pieces[row][column] = null\r\n                else\r\n                    pieces[row][column] = undefined\r\n        }\r\n    }\r\n\r\n    return pieces\r\n}\r\n\r\nexport const movePiece = (board,fromRow,fromColumn,toRow,toColumn)=>{\r\n    if(board.pieces[fromRow][fromColumn]==null) {\r\n        return board\r\n    }\r\n            \r\n    if (isAbleToEat(board,fromRow,fromColumn,toRow,toColumn)){\r\n        let pieceRow = toRow-fromRow>0?toRow-1:toRow+1\r\n        let pieceColumn = toColumn-fromColumn>0?toColumn-1:toColumn+1\r\n        board.pieces[pieceRow][pieceColumn] = null\r\n    }\r\n    if ((toRow===0 && board.isWhite || toRow===7) && !board.pieces[fromRow][fromColumn].isKing)\r\n        board.pieces[fromRow][fromColumn] = {...board.pieces[fromRow][fromColumn], isKing: true, color:board.isWhite?'white-king':'black-king'}\r\n    board.pieces[toRow][toColumn] = {row:toRow, column: toColumn, isWhite:board.pieces[fromRow][fromColumn].isWhite, color:board.pieces[fromRow][fromColumn].color, isKing: board.pieces[fromRow][fromColumn].isKing}\r\n    board.pieces[fromRow][fromColumn] = null\r\n    // if (isAbleToEat(board,toRow,toColumn)&&isEating){\r\n    //     board.pieces[toRow][toColumn].MultipleEatings = true\r\n    //     // this.mustEatPieces.push(pieces[toRow][toColumn])\r\n    // }\r\n    // else\r\n    return {...board};\r\n}\r\n\r\nexport const setMustEatPiecesList = (board,isWhite)=>{\r\n    if (board.isWhite !== isWhite) {\r\n        return []\r\n    }\r\n    let mustEatPieces = []\r\n    for (let row=0;row<8;row++){\r\n        for (let column=0;column<8;column++){\r\n            if (board.pieces[row][column]==null)\r\n                continue\r\n            if (board.pieces[row][column].isWhite===isWhite){\r\n                if (pieceEatMoves(board, row, column).length > 0)\r\n                    mustEatPieces.push(board.pieces[row][column])\r\n            }\r\n        }\r\n    }\r\n    return mustEatPieces\r\n}\r\n\r\nexport const isPlayerWon = (board,isWhite)=>{\r\n    for (let row=0;row<8;row++){\r\n        for (let column=0;column<8;column++){\r\n            if (board.pieces[row][column]!=null)\r\n                if (board.pieces[row][column].isWhite!==isWhite)\r\n                    if (pieceEatMoves(board,row,column).length > 0 || pieceValidMoves(board,row,column).length > 0)\r\n                        return false\r\n        }\r\n    }\r\n    return true\r\n}\r\n\r\n// class CheckersGame{\r\n//     constructor(){\r\n//         this.IsWhite=true\r\n//         pieces = [];\r\n//         this.mustEatPieces=[]\r\n//     }\r\n    \r\n\r\n//     SetMustEatPiecesList(){\r\n//         for (let row=0;row<8;row++){\r\n//             for (let column=0;column<8;column++){\r\n//                 if (pieces[row][column]==null)\r\n//                     continue\r\n//                 if (pieces[row][column].IsWhite===this.IsWhite){\r\n//                     if (pieces[row][column].IsAbleToEat(pieces))\r\n//                         this.mustEatPieces.push(pieces[row][column])\r\n//                 }\r\n//             }\r\n//         }\r\n//     }\r\n//     IsPieceInMustEatList(piece){\r\n//         for (let i=0;i<this.mustEatPieces.length;i++)\r\n//             if (this.mustEatPieces[i]===piece)\r\n//                 return true\r\n//         return false\r\n//     }\r\n//     ChangeTurn =function(){\r\n//         this.IsWhite = !this.IsWhite\r\n//         this.mustEatPieces=[]\r\n//         this.SetMustEatPiecesList()\r\n//     }\r\n\r\n// }\r\n\r\n\r\n",["184","185"],"C:\\Users\\matan\\Checkers\\client\\src\\components\\routers\\AppRouter.js",[],["186","187"],"C:\\Users\\matan\\Checkers\\client\\src\\components\\context\\PlayersContext.js",["188","189","190","191","192"],"C:\\Users\\matan\\Checkers\\client\\src\\components\\context\\LoginContext.js",[],"C:\\Users\\matan\\Checkers\\client\\src\\components\\login\\Login.js",[],"C:\\Users\\matan\\Checkers\\client\\src\\components\\main\\Header.js",[],"C:\\Users\\matan\\Checkers\\client\\src\\components\\login\\Subscribe.js",[],"C:\\Users\\matan\\Checkers\\client\\src\\actions\\playersAction.js",[],"C:\\Users\\matan\\Checkers\\client\\src\\reducers\\playersReducer.js",[],"C:\\Users\\matan\\Checkers\\client\\src\\actions\\gameBoardAction.js",[],["193","194"],"C:\\Users\\matan\\Checkers\\client\\src\\components\\rooms\\UserField.js",[],"C:\\Users\\matan\\Checkers\\client\\src\\gameLogic\\kingLogic.js",["195","196"],"\r\n\r\nexport const isKingValidMove=(board,fromRow,fromColumn,endRow,endColumn)=>{\r\n    // if (this.PiecesToEat(board).length>0){\r\n    //     if (this.IsAbleToEat(board,endRow,endColumn)) \r\n    //         return true\r\n    //     else\r\n    //         return false\r\n    // }\r\n    let changeRow=endRow-fromRow>0?1:-1\r\n    let changeColumn=endColumn-fromColumn>0?1:-1\r\n    let row = endRow\r\n    let column = endColumn\r\n    while (row!==fromRow&&column!=changeColumn){\r\n            if (board.pieces[row][column]!==null)\r\n                return false\r\n        row-=changeRow\r\n        column-=changeColumn\r\n    }\r\n    return true       \r\n}\r\nexport const isKingAbleToEat=(board,fromRow,fromColumn,endRow,endColumn)=>{\r\n    // if (endRow==null || endColumn==null){\r\n    //     if (this.PiecesToEat(board).length>0)\r\n    //         return true\r\n    //     return false\r\n    // }\r\n    let eatenPieceRow=endRow-fromRow>0?endRow-1:endRow+1\r\n    let eatenPieceColumn=endColumn-fromColumn>0?endColumn-1:endColumn+1\r\n    if (eatenPieceColumn<0||eatenPieceColumn>7||eatenPieceRow<0||eatenPieceRow>7)\r\n        return false\r\n    let eatenPiece = board.pieces[eatenPieceRow][eatenPieceColumn];\r\n    let changeRow = endRow-fromRow>0?1:-1\r\n    let changeColumn = endColumn-fromColumn>0?1:-1\r\n    if (eatenPiece==null || board.pieces[endRow][endColumn]!==null)\r\n        return false\r\n    if (eatenPiece.isWhite===board.isWhite)\r\n        return false\r\n    let row = fromRow+changeRow\r\n    let column = fromColumn+changeColumn\r\n    if (row<0||row>7||column<0||column>7)\r\n        return false\r\n    while (row!==eatenPieceRow&&column!=eatenPieceColumn){\r\n        if (board.pieces[row][column]!==null)\r\n            return false\r\n        row+=changeRow\r\n        column+=changeColumn\r\n        if (row<0||row>7||column<0||column>7)\r\n            return false\r\n    }\r\n    if (row===eatenPieceRow&& column===eatenPieceColumn)\r\n        return true\r\n    return false\r\n}\r\n\r\nexport const kingValidMoves = (board,fromRow,fromColumn)=>{\r\n    let moves=[]\r\n    validMovesInDiagonal(board,moves,fromRow,fromColumn,fromRow+1,fromColumn+1,+1,+1)\r\n    validMovesInDiagonal(board,moves,fromRow,fromColumn,fromRow-1,fromColumn+1,-1,+1)\r\n    validMovesInDiagonal(board,moves,fromRow,fromColumn,fromRow+1,fromColumn-1,+1,-1)\r\n    validMovesInDiagonal(board,moves,fromRow,fromColumn,fromRow-1,fromColumn-1,-1,-1)\r\n    return moves\r\n}\r\n\r\nexport const validMovesInDiagonal = (board,moves,fromRow,fromColumn,row,column,changeRow,changeColumn)=>{\r\n    while (row>=0 && row<8 && column >=0 && column < 8)\r\n    {\r\n        if (isKingValidMove(board,fromRow,fromColumn,row,column))\r\n            moves.push({row,column})\r\n        else\r\n            return\r\n        row+=changeRow;\r\n        column+=changeColumn;\r\n    }\r\n}\r\n\r\nexport const kingEatingMoves = (board,fromRow,fromColumn)=>{\r\n    let pieces=[]\r\n    for (let row=0;row<8;row++)\r\n        for (let column=0;column<8;column++){\r\n            if (board.pieces[row][column]===undefined)\r\n                continue\r\n            if (isKingAbleToEat(board,fromRow,fromColumn,row,column))\r\n                pieces.push({row,column})\r\n        }\r\n    return pieces\r\n}\r\n\r\n\r\n// class Queen extends Piece{\r\n//     constructor(row,column,isWhite){\r\n//         super(row,column,isWhite)\r\n//         this.IsQueen = true\r\n//     }\r\n//     IsAbleToMove = function(board){\r\n//         for (let row=0;row<8;row++){\r\n//             for (let column=0;column<8;column++){\r\n//                 if (this.IsValidMove(board,row,column))\r\n//                     return true\r\n//             }\r\n//         }\r\n//         return false\r\n//     }\r\n\r\n// }","C:\\Users\\matan\\Checkers\\client\\src\\components\\routers\\PrivateRouter.js",[],["197","198"],"C:\\Users\\matan\\Checkers\\client\\src\\sockets\\socket.js",[],"C:\\Users\\matan\\Checkers\\client\\src\\gameLogic\\pieceLogic.js",["199"],"C:\\Users\\matan\\Checkers\\client\\src\\components\\rooms\\GameRoom.js",["200","201"],"C:\\Users\\matan\\Checkers\\client\\src\\reducers\\messagesReducer.js",[],"C:\\Users\\matan\\Checkers\\client\\src\\components\\messages\\Inbox.js",["202"],"import React, { useContext, useEffect} from 'react';\r\nimport { MessagesContext } from '../context/MessagesContext';\r\nimport ResciveMessage from './RescivedMessage';\r\n\r\n\r\nconst Inbox = (props)=>{\r\n    const {messagesState} = useContext(MessagesContext)\r\n    const onCloseClicked = ()=>{\r\n        props.setIsInboxVisible(false)\r\n    }\r\n\r\n    return (\r\n        <div className=\"inbox-container\">\r\n            <span className=\"close-inbox\" onClick={onCloseClicked}>X</span>\r\n            <h3 className=\"title\">Messages</h3>\r\n            <div className=\"messages\">\r\n                {\r\n                    messagesState.map((message,index)=>(\r\n                        <ResciveMessage key={message.id} message={message.content} index={index} \r\n                        setIsDisplayedBoard={props.setIsDisplayedBoard} socketId={message.socketId}\r\n                        setIsInboxVisible={props.setIsInboxVisible}\r\n                        name={message.name}\r\n                        setOpponent={props.setOpponent}/>\r\n                    ))\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Inbox;","C:\\Users\\matan\\Checkers\\client\\src\\reducers\\gameBoardReducer.js",[],"C:\\Users\\matan\\Checkers\\client\\src\\components\\messages\\RescivedMessage.js",[],"C:\\Users\\matan\\Checkers\\client\\src\\components\\messages\\Invitation.js",[],"C:\\Users\\matan\\Checkers\\client\\src\\reportWebVitals.js",[],"C:\\Users\\matan\\Checkers\\client\\src\\components\\routers\\LoginRoute.js",[],"C:\\Users\\matan\\Checkers\\client\\src\\reducers\\loginReducer.js",[],"C:\\Users\\matan\\Checkers\\client\\src\\server\\auth.js",[],"C:\\Users\\matan\\Checkers\\client\\src\\components\\profile\\Profile.js",[],"C:\\Users\\matan\\Checkers\\client\\src\\components\\home\\HomePage.js",[],"C:\\Users\\matan\\Checkers\\client\\src\\actions\\messagesAction.js",[],"C:\\Users\\matan\\Checkers\\client\\src\\index.js",[],"C:\\Users\\matan\\Checkers\\client\\src\\components\\context\\MessagesContext.js",[],"C:\\Users\\matan\\Checkers\\client\\src\\components\\login\\LoginForm.js",[],"C:\\Users\\matan\\Checkers\\client\\src\\components\\rooms\\Players.js",[],"C:\\Users\\matan\\Checkers\\client\\src\\cookies\\cookies.js",[],"C:\\Users\\matan\\Checkers\\client\\src\\actions\\loginAction.js",[],"C:\\Users\\matan\\Checkers\\client\\src\\components\\rooms\\GameInfoBox.js",[],"C:\\Users\\matan\\Checkers\\client\\src\\components\\context\\GameBoardContext.js",["203","204"],{"ruleId":"205","severity":1,"message":"206","line":8,"column":10,"nodeType":"207","messageId":"208","endLine":8,"endColumn":20},{"ruleId":"209","severity":1,"message":"210","line":138,"column":7,"nodeType":"211","endLine":138,"endColumn":23,"suggestions":"212"},{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","replacedBy":"216"},{"ruleId":"205","severity":1,"message":"217","line":10,"column":12,"nodeType":"207","messageId":"208","endLine":10,"endColumn":21},{"ruleId":"205","severity":1,"message":"218","line":10,"column":23,"nodeType":"207","messageId":"208","endLine":10,"endColumn":35},{"ruleId":"209","severity":1,"message":"219","line":75,"column":7,"nodeType":"211","endLine":75,"endColumn":43,"suggestions":"220"},{"ruleId":"221","severity":1,"message":"222","line":8,"column":30,"nodeType":"223","messageId":"224","endLine":8,"endColumn":32},{"ruleId":"221","severity":1,"message":"222","line":8,"column":45,"nodeType":"223","messageId":"224","endLine":8,"endColumn":47},{"ruleId":"221","severity":1,"message":"225","line":8,"column":45,"nodeType":"223","messageId":"224","endLine":8,"endColumn":47},{"ruleId":"221","severity":1,"message":"225","line":8,"column":57,"nodeType":"223","messageId":"224","endLine":8,"endColumn":59},{"ruleId":"221","severity":1,"message":"222","line":14,"column":30,"nodeType":"223","messageId":"224","endLine":14,"endColumn":32},{"ruleId":"221","severity":1,"message":"222","line":14,"column":45,"nodeType":"223","messageId":"224","endLine":14,"endColumn":47},{"ruleId":"221","severity":1,"message":"225","line":14,"column":45,"nodeType":"223","messageId":"224","endLine":14,"endColumn":47},{"ruleId":"221","severity":1,"message":"225","line":14,"column":57,"nodeType":"223","messageId":"224","endLine":14,"endColumn":59},{"ruleId":"221","severity":1,"message":"222","line":20,"column":30,"nodeType":"223","messageId":"224","endLine":20,"endColumn":32},{"ruleId":"221","severity":1,"message":"222","line":20,"column":45,"nodeType":"223","messageId":"224","endLine":20,"endColumn":47},{"ruleId":"221","severity":1,"message":"225","line":20,"column":45,"nodeType":"223","messageId":"224","endLine":20,"endColumn":47},{"ruleId":"221","severity":1,"message":"225","line":20,"column":57,"nodeType":"223","messageId":"224","endLine":20,"endColumn":59},{"ruleId":"221","severity":1,"message":"222","line":40,"column":20,"nodeType":"223","messageId":"224","endLine":40,"endColumn":22},{"ruleId":"221","severity":1,"message":"222","line":40,"column":37,"nodeType":"223","messageId":"224","endLine":40,"endColumn":39},{"ruleId":"213","replacedBy":"226"},{"ruleId":"215","replacedBy":"227"},{"ruleId":"213","replacedBy":"228"},{"ruleId":"215","replacedBy":"229"},{"ruleId":"205","severity":1,"message":"230","line":1,"column":44,"nodeType":"207","messageId":"208","endLine":1,"endColumn":53},{"ruleId":"205","severity":1,"message":"231","line":2,"column":10,"nodeType":"207","messageId":"208","endLine":2,"endColumn":26},{"ruleId":"205","severity":1,"message":"232","line":4,"column":10,"nodeType":"207","messageId":"208","endLine":4,"endColumn":26},{"ruleId":"205","severity":1,"message":"233","line":4,"column":28,"nodeType":"207","messageId":"208","endLine":4,"endColumn":44},{"ruleId":"205","severity":1,"message":"234","line":10,"column":12,"nodeType":"207","messageId":"208","endLine":10,"endColumn":21},{"ruleId":"213","replacedBy":"235"},{"ruleId":"215","replacedBy":"236"},{"ruleId":"237","severity":1,"message":"238","line":14,"column":33,"nodeType":"239","messageId":"240","endLine":14,"endColumn":35},{"ruleId":"237","severity":1,"message":"238","line":43,"column":39,"nodeType":"239","messageId":"240","endLine":43,"endColumn":41},{"ruleId":"213","replacedBy":"241"},{"ruleId":"215","replacedBy":"242"},{"ruleId":"205","severity":1,"message":"243","line":1,"column":43,"nodeType":"207","messageId":"208","endLine":1,"endColumn":57},{"ruleId":"209","severity":1,"message":"244","line":38,"column":7,"nodeType":"211","endLine":38,"endColumn":18,"suggestions":"245"},{"ruleId":"246","severity":1,"message":"247","line":54,"column":25,"nodeType":"248","endLine":54,"endColumn":42},{"ruleId":"205","severity":1,"message":"230","line":1,"column":29,"nodeType":"207","messageId":"208","endLine":1,"endColumn":38},{"ruleId":"205","severity":1,"message":"230","line":1,"column":44,"nodeType":"207","messageId":"208","endLine":1,"endColumn":53},{"ruleId":"205","severity":1,"message":"249","line":3,"column":9,"nodeType":"207","messageId":"208","endLine":3,"endColumn":23},"no-unused-vars","'addMessage' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'gameBoardDispatch', 'props', and 'setBoard'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["250"],"no-native-reassign",["251"],"no-negated-in-lhs",["252"],"'isClicked' is assigned a value but never used.","'setIsClicked' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.color', 'props.column', 'props.isMyPiece', 'props.mustEatPieces', and 'props.row'. Either include them or remove the dependency array. If 'setCssClassName' needs the current value of 'props.color', you can also switch to useReducer instead of useState and read 'props.color' in the reducer.",["253"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'.",["251"],["252"],["251"],["252"],"'useEffect' is defined but never used.","'setPlayersAction' is defined but never used.","'disconnectSocket' is defined but never used.","'getOnlinePlayers' is defined but never used.","'userState' is assigned a value but never used.",["251"],["252"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["251"],["252"],"'kingValidMoves' is defined but never used.","React Hook useEffect has missing dependencies: 'isFirstLoad', 'messagesDispatch', and 'playersDispatch'. Either include them or remove the dependency array.",["254"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'setBoardAction' is defined but never used.",{"desc":"255","fix":"256"},"no-global-assign","no-unsafe-negation",{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},"Update the dependencies array to be: [gameBoardDispatch, gameBoardState, props, setBoard]",{"range":"261","text":"262"},"Update the dependencies array to be: [props.selectedPiece, props.isMyTurn, props.mustEatPieces, props.isMyPiece, props.row, props.column, props.color]",{"range":"263","text":"264"},"Update the dependencies array to be: [isFirstLoad, messagesDispatch, playersDispatch, userState]",{"range":"265","text":"266"},[5224,5240],"[gameBoardDispatch, gameBoardState, props, setBoard]",[2874,2910],"[props.selectedPiece, props.isMyTurn, props.mustEatPieces, props.isMyPiece, props.row, props.column, props.color]",[1642,1653],"[isFirstLoad, messagesDispatch, playersDispatch, userState]"]